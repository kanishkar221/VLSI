#! /usr/bin/vvp
:ivl_version "12.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/system.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_sys.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_textio.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2005_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/va_math.vpi";
S_0x7ffff0f1f4f0 .scope module, "power_func" "power_func" 2 1;
 .timescale 0 0;
v0x7ffff0f6e040_0 .var "a", 7 0;
v0x7ffff0f6e140_0 .var "b", 7 0;
v0x7ffff0f6e220_0 .var "result", 31 0;
S_0x7ffff0f1f680 .scope function.vec4.s32, "power" "power" 2 6, 2 6 0, S_0x7ffff0f1f4f0;
 .timescale 0 0;
v0x7ffff0f1f860_0 .var "base", 7 0;
v0x7ffff0f6ddc0_0 .var "exp", 7 0;
v0x7ffff0f6dea0_0 .var/i "i", 31 0;
; Variable power is vec4 return value of scope S_0x7ffff0f1f680
TD_power_func.power ;
    %pushi/vec4 1, 0, 32;
    %ret/vec4 0, 0, 32;  Assign to power (store_vec4_to_lval)
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x7ffff0f6dea0_0, 0, 32;
T_0.0 ;
    %load/vec4 v0x7ffff0f6dea0_0;
    %load/vec4 v0x7ffff0f6ddc0_0;
    %pad/u 32;
    %cmp/u;
    %jmp/0xz T_0.1, 5;
    %retload/vec4 0; Load power (draw_signal_vec4)
    %load/vec4 v0x7ffff0f1f860_0;
    %pad/u 32;
    %mul;
    %ret/vec4 0, 0, 32;  Assign to power (store_vec4_to_lval)
    %load/vec4 v0x7ffff0f6dea0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x7ffff0f6dea0_0, 0, 32;
    %jmp T_0.0;
T_0.1 ;
    %end;
    .scope S_0x7ffff0f1f4f0;
T_1 ;
    %vpi_call 2 19 "$monitor", "Time=%0t | a=%0d | b=%0d | a^b=%0d", $time, v0x7ffff0f6e040_0, v0x7ffff0f6e140_0, v0x7ffff0f6e220_0 {0 0 0};
    %pushi/vec4 2, 0, 8;
    %store/vec4 v0x7ffff0f6e040_0, 0, 8;
    %pushi/vec4 3, 0, 8;
    %store/vec4 v0x7ffff0f6e140_0, 0, 8;
    %load/vec4 v0x7ffff0f6e040_0;
    %load/vec4 v0x7ffff0f6e140_0;
    %store/vec4 v0x7ffff0f6ddc0_0, 0, 8;
    %store/vec4 v0x7ffff0f1f860_0, 0, 8;
    %callf/vec4 TD_power_func.power, S_0x7ffff0f1f680;
    %store/vec4 v0x7ffff0f6e220_0, 0, 32;
    %delay 10, 0;
    %pushi/vec4 5, 0, 8;
    %store/vec4 v0x7ffff0f6e040_0, 0, 8;
    %pushi/vec4 2, 0, 8;
    %store/vec4 v0x7ffff0f6e140_0, 0, 8;
    %load/vec4 v0x7ffff0f6e040_0;
    %load/vec4 v0x7ffff0f6e140_0;
    %store/vec4 v0x7ffff0f6ddc0_0, 0, 8;
    %store/vec4 v0x7ffff0f1f860_0, 0, 8;
    %callf/vec4 TD_power_func.power, S_0x7ffff0f1f680;
    %store/vec4 v0x7ffff0f6e220_0, 0, 32;
    %delay 10, 0;
    %pushi/vec4 3, 0, 8;
    %store/vec4 v0x7ffff0f6e040_0, 0, 8;
    %pushi/vec4 4, 0, 8;
    %store/vec4 v0x7ffff0f6e140_0, 0, 8;
    %load/vec4 v0x7ffff0f6e040_0;
    %load/vec4 v0x7ffff0f6e140_0;
    %store/vec4 v0x7ffff0f6ddc0_0, 0, 8;
    %store/vec4 v0x7ffff0f1f860_0, 0, 8;
    %callf/vec4 TD_power_func.power, S_0x7ffff0f1f680;
    %store/vec4 v0x7ffff0f6e220_0, 0, 32;
    %delay 10, 0;
    %pushi/vec4 7, 0, 8;
    %store/vec4 v0x7ffff0f6e040_0, 0, 8;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x7ffff0f6e140_0, 0, 8;
    %load/vec4 v0x7ffff0f6e040_0;
    %load/vec4 v0x7ffff0f6e140_0;
    %store/vec4 v0x7ffff0f6ddc0_0, 0, 8;
    %store/vec4 v0x7ffff0f1f860_0, 0, 8;
    %callf/vec4 TD_power_func.power, S_0x7ffff0f1f680;
    %store/vec4 v0x7ffff0f6e220_0, 0, 32;
    %delay 10, 0;
    %pushi/vec4 10, 0, 8;
    %store/vec4 v0x7ffff0f6e040_0, 0, 8;
    %pushi/vec4 5, 0, 8;
    %store/vec4 v0x7ffff0f6e140_0, 0, 8;
    %load/vec4 v0x7ffff0f6e040_0;
    %load/vec4 v0x7ffff0f6e140_0;
    %store/vec4 v0x7ffff0f6ddc0_0, 0, 8;
    %store/vec4 v0x7ffff0f1f860_0, 0, 8;
    %callf/vec4 TD_power_func.power, S_0x7ffff0f1f680;
    %store/vec4 v0x7ffff0f6e220_0, 0, 32;
    %delay 10, 0;
    %delay 20, 0;
    %vpi_call 2 27 "$finish" {0 0 0};
    %end;
    .thread T_1;
# The file index is used to find the file name in the following table.
:file_names 3;
    "N/A";
    "<interactive>";
    "power_func.v";
